const { SlashCommandBuilder, EmbedBuilder } = require("discord.js");

module.exports = {
  data: new SlashCommandBuilder()
    .setName("poll")
    .setDescription("Cr√©e un sondage dans un canal.")
    .addStringOption((option) =>
      option
        .setName("question")
        .setDescription("La question du sondage.")
        .setRequired(true)
    )
    .addStringOption((option) =>
      option
        .setName("options")
        .setDescription(
          "Les choix du sondage, s√©par√©s par des virgules (max 10 choix)."
        )
        .setRequired(true)
    ),
  category: "üîß - Utilitaire",

  async run(interaction) {
    try {
      if (!interaction.member.permissions.has("ManageMessages")) {
        return interaction.reply({
          content: "‚ùå Vous n'avez pas la permission de cr√©er un sondage.",
          flags: 64, // R√©ponse √©ph√©m√®re
        });
      }

      const question = interaction.options.getString("question");
      const options = interaction.options
        .getString("options")
        .split(",")
        .map((opt) => opt.trim());

      // V√©rifier le nombre d'options
      if (options.length < 2 || options.length > 10) {
        return interaction.reply({
          content: "‚ùå Vous devez fournir entre 2 et 10 options.",
          flags: 64, // R√©ponse √©ph√©m√®re
        });
      }

      // Emojis pour les votes
      const emojis = ["1Ô∏è‚É£", "2Ô∏è‚É£", "3Ô∏è‚É£", "4Ô∏è‚É£", "5Ô∏è‚É£", "6Ô∏è‚É£", "7Ô∏è‚É£", "8Ô∏è‚É£", "9Ô∏è‚É£", "üîü"];

      // Construire l'embed du sondage
      const embed = new EmbedBuilder()
        .setTitle("üìä Sondage")
        .setDescription(`**${question}**\n\n${options
          .map((opt, index) => `${emojis[index]} ${opt}`)
          .join("\n")}`)
        .setColor("#0099ff")
        .setFooter({
          text: `Cr√©√© par ${interaction.user.username}`,
          iconURL: interaction.user.displayAvatarURL({ dynamic: true }),
        });

      // Envoyer le sondage
      const pollMessage = await interaction.reply({
        embeds: [embed],
        fetchReply: true, // N√©cessaire pour r√©cup√©rer le message
      });

      // Ajouter les r√©actions pour voter
      for (let i = 0; i < options.length; i++) {
        await pollMessage.react(emojis[i]);
      }
    } catch (error) {
      console.error("Erreur lors de la cr√©ation du sondage :", error);
      await interaction.reply({
        content: "‚ùå Une erreur est survenue lors de la cr√©ation du sondage.",
        flags: 64, // R√©ponse √©ph√©m√®re
      });
    }
  },
};